
version: '3.8'

services:

  sigdep3:
    image: partnersinhealth/openmrs-server:latest
    restart: unless-stopped
    depends_on:
      sigdep-db:
        condition: service_healthy
    container_name: sigdep3
    hostname: sigdep3
    healthcheck:
      test:
        - CMD
        - curl
        - "-f"
        - "http://localhost:8080/openmrs/"
      timeout: 5s    
    environment:
      OMRS_CONFIG_CONNECTION_SERVER: "sigdep-db"
      OMRS_CONFIG_CONNECTION_ROOT_PASSWORD: "root"
      OMRS_CONFIG_CONNECTION_USERNAME: "root"
      OMRS_CONFIG_CONNECTION_PASSWORD: "root"
      OMRS_CONFIG_CONNECTION_EXTRA_ARGS: "&autoReconnect=true&sessionVariables=default_storage_engine%3DInnoDB&useUnicode=true&characterEncoding=UTF-8&useSSL=false&requireSSL=false"
      OMRS_CONFIG_AUTO_UPDATE_DATABASE: "false"
      OMRS_CONFIG_CREATE_TABLES: "false"
      OMRS_CONFIG_HAS_CURRENT_OPENMRS_DATABASE: "true"
      OMRS_DEV_DEBUG_PORT: "1044"
      CLIENTREGISTRY_SERVERURL: ${CLIENTREGISTRY_SERVERURL}
      CLIENTREGISTRY_USERNAME: ${CLIENTREGISTRY_USERNAME}
      CLIENTREGISTRY_PASSWORD: ${CLIENTREGISTRY_PASSWORD}
      CLIENTREGISTRY_IDENTIFIERROOT: ${CLIENTREGISTRY_IDENTIFIERROOT}
    ports:
      - "8080:8080"
      - "1044:1044"
    volumes:
      - ./configs/sigdep3/distribution:/openmrs/distribution
      # uncomment to persist the volumes on the Host file system
      #- .data/sigdep3:/openmrs/data
    networks:
      - hie

  sigdep-db:
    image: library/mysql:5.6
    restart: unless-stopped    
    hostname: sigdep-db
    container_name: sigdep-db
    command: "mysqld \
              --character-set-server=utf8 \
              --collation-server=utf8_general_ci \
              --max_allowed_packet=1G \
              --default-authentication-plugin=mysql_native_password \
              --sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION"
    environment:
      MYSQL_DATABASE: "openmrs"
      MYSQL_ROOT_PASSWORD: "root"
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10
    depends_on:
      openhim-core:
        condition: service_healthy    
    ports:
      - "3307:3306"          
    volumes:
      - ./configs/sigdep3/mysql.cnf:/etc/mysql/conf.d/custom.cnf  # mysql config preconfigured to allow binlog/debezium
      - ./configs/sigdep3/init-db:/docker-entrypoint-initdb.d
      # uncomment to persist the volumes on the Host file system
      #- .db/sigdep3:/var/lib/mysql
    networks:
      - hie

#OpenHIM -IOL
  mongo:
    container_name: openhim-mongo
    ports:
      - "27018:27017"
    image: mongo:3.4
    networks:
      - hie
      
  openhim-core:
    container_name: openhim-core
    image: jembi/openhim-core:v7.1.0
    restart: unless-stopped
    environment:
      - mongo_url=mongodb://mongo/openhim
      - mongo_atnaUrl=mongodb://mongo/openhim
    healthcheck:
      test: "node /healthcheck.js"
      interval: 20s
      timeout: 20s
      retries: 2
    volumes:
      - ./configs/openhim/healthcheck.js:/healthcheck.js
    depends_on:
      - mongo
    ports:
      - "8085:8080"
      - "5000:5000"
      - "5001:5001"
      - "5050:5050"
      - "5051:5051"
      - "5052:5052"
      - "7788:7788"       
    networks:
      - hie

  openhim-console:
    container_name: openhim-console
    image: jembi/openhim-console:v1.15.0
    volumes:
      - ./configs/openhim-console/default-local.json:/usr/share/nginx/html/config/default.json
    healthcheck:
      test: "curl -sS http://openhim-console || exit 1"
      interval: 10s
      timeout: 60s
      retries: 3
    ports:
        - "9000:80"
    networks:
      - hie

  # Loads Default OpenHIM Config
  openhim-config:
    container_name: openhim-config
    image: ghcr.io/digi-uw/openhim-config:v0.0.0
    volumes:
      - ./configs/openhim/local-test-openhim-config.json:/app/test-openhim-config.json
    networks:
      - hie

  pipeline-controller:
    image: itechuw/fhir-data-pipes:develop
    container_name: pipeline-controller
    depends_on:
      sigdep3:
        condition: service_healthy
    volumes:
      - ./configs/local-streaming-pipeline:/app/config:ro
      - ./configs/dwh:/dwh
    environment:
      - "JAVA_OPTS=$JAVA_OPTS"
    ports:
      - '8090:8080'
    networks:
      - hie

secrets:
  datasource.password:
    file: ./configs/openelis/properties/datasource.password
  common.properties:
    file: ./configs/openelis/properties/common.properties

volumes:
  db-data:
  key_trust-store-volume:
  certs-vol:
  certs:
  keys-vol:       

networks:
  hie: